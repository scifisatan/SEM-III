{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"3rd Semester \u00b6 Object Oriented Programming ( OOP ) \u00b6 Digital Logic ( DL ) \u00b6 Electronic Circuit Theory ( ECT ) \u00b6 Electromagnetics ( EM ) \u00b6 Electronic Devices & Circuits ( EDC ) \u00b6 Theory of Computation ( TOC ) \u00b6 ( Math ) \u00b6 Important Links \u00b6 - 3rd Semester - Google Drive \u00b6 Marks Distribution \u00b6 Subject Internal Final Practical Total Math 20 80 100 OOP 20 80 50 150 TOC 20 80 100 ECT 20 80 25 125 EDC 20 20 80 25 DL 20 80 50 150 EM 20 80 25 125 Total 140 560 175 875","title":"3rd Semester"},{"location":"#3rd-semester","text":"","title":"3rd Semester"},{"location":"#object-oriented-programming-oop","text":"","title":"Object Oriented Programming (OOP)"},{"location":"#digital-logic-dl","text":"","title":"Digital Logic (DL)"},{"location":"#electronic-circuit-theory-ect","text":"","title":"Electronic Circuit Theory (ECT)"},{"location":"#electromagnetics-em","text":"","title":"Electromagnetics (EM)"},{"location":"#electronic-devices-circuits-edc","text":"","title":"Electronic Devices &amp; Circuits (EDC)"},{"location":"#theory-of-computation-toc","text":"","title":"Theory of Computation (TOC)"},{"location":"#math","text":"","title":"(Math)"},{"location":"#important-links","text":"","title":"Important Links"},{"location":"#-3rd-semester-google-drive","text":"","title":"- 3rd Semester - Google Drive"},{"location":"#marks-distribution","text":"Subject Internal Final Practical Total Math 20 80 100 OOP 20 80 50 150 TOC 20 80 100 ECT 20 80 25 125 EDC 20 20 80 25 DL 20 80 50 150 EM 20 80 25 125 Total 140 560 175 875","title":"Marks Distribution"},{"location":"Notes/1%E2%80%99s/","text":"Subtraction from 1's Complement \u00b6 step 2: addition of number to be subtracted from and 1's complement of number to be stracted","title":"Subtraction from 1's Complement"},{"location":"Notes/1%E2%80%99s/#subtraction-from-1s-complement","text":"step 2: addition of number to be subtracted from and 1's complement of number to be stracted","title":"Subtraction from 1's Complement"},{"location":"Notes/2022-08-25/","text":"","title":"2022 08 25"},{"location":"Notes/2022-08-29/","text":"","title":"2022 08 29"},{"location":"Notes/2%E2%80%99s/","text":"Subtraction by 2's complement \u00b6 if there is no overflow then you need to take 2's complement of the result and the answer is the negative of the result","title":"Subtraction by 2's complement"},{"location":"Notes/2%E2%80%99s/#subtraction-by-2s-complement","text":"if there is no overflow then you need to take 2's complement of the result and the answer is the negative of the result","title":"Subtraction by 2's complement"},{"location":"Notes/4%20bit%20parallel%20adder/","text":"","title":"4 bit parallel adder"},{"location":"Notes/AMV%20using%2055%20timer%20IC/","text":"","title":"AMV using 55 timer IC"},{"location":"Notes/Application%20of%20register/","text":"Ring Counter \u00b6 Tail counter \u00b6","title":"Application of register"},{"location":"Notes/Application%20of%20register/#ring-counter","text":"","title":"Ring Counter"},{"location":"Notes/Application%20of%20register/#tail-counter","text":"","title":"Tail counter"},{"location":"Notes/Colpitts%20Oscillator/","text":"","title":"Colpitts Oscillator"},{"location":"Notes/DC%20Voltage%20Regulator%20and%20its%20stability%20factor/","text":"","title":"DC Voltage Regulator and its stability factor"},{"location":"Notes/Draw%20the%20circuit%20to%20add%201011%20and%201100/","text":"","title":"Draw the circuit to add 1011 and 1100"},{"location":"Notes/Fast%20adder/","text":"Alternative names : Carry Look Ahead Adder/ CLA adder main point of fast adder : to predict the carry Introduction \u00b6 For other adders to produce output, it takes certain amount of time and when we combine multiple of them to make an n-bit adder, it is slower as it has to go throught every adder one by one to wait for the carry to mitigate this problem fast adder is used and it basically predicts the carry which makes it more different from other adders If you see the truth table, when both A and B are high, the carry out is high independent of Cin And the equation from it can be written as: Also when A and B are complement of each other and Cin is 1, Carry out is 1. Similary, the equation becomes: Combining both of the above For n-bit adder, we can generalize the above equation as: Logic behind this would be carry out of one adder will be carry out of another adder Let us take 4-bit adder then: Carry Lookahead Adder (Part 2)","title":"Fast adder"},{"location":"Notes/Fast%20adder/#introduction","text":"For other adders to produce output, it takes certain amount of time and when we combine multiple of them to make an n-bit adder, it is slower as it has to go throught every adder one by one to wait for the carry to mitigate this problem fast adder is used and it basically predicts the carry which makes it more different from other adders If you see the truth table, when both A and B are high, the carry out is high independent of Cin And the equation from it can be written as: Also when A and B are complement of each other and Cin is 1, Carry out is 1. Similary, the equation becomes: Combining both of the above For n-bit adder, we can generalize the above equation as: Logic behind this would be carry out of one adder will be carry out of another adder Let us take 4-bit adder then: Carry Lookahead Adder (Part 2)","title":"Introduction"},{"location":"Notes/Frequency%20Counters/","text":"","title":"Frequency Counters"},{"location":"Notes/Full%20adder%20circuit%20using%204%20is%20to%201%20Multiplexer/","text":"mental note \u00b6 basically how mux works is an input is selected as output depending on the combination of selector variables for 4 inputs we need to have atleast 2 selector variable. 2 selector variable with create 4 unique combinations and we can link each one of those combination as a way to select one of the inputs as output so in this full adder we are trying to see that in what combination of A and B is sum/carryout =1 and what the value of Cin is in that instance. if you see truth table when a=0 and b=0 and sum = 1, cin is 1. so first input of 4x1 mux would be cin second if you see when a =0 and b=1 and sum = 1, cin is 0, that means second input of 4x1 mux would be cin complement in that way the final design of mux would look like similarly for the carry","title":"Full adder circuit using 4 is to 1 Multiplexer"},{"location":"Notes/Full%20adder%20circuit%20using%204%20is%20to%201%20Multiplexer/#mental-note","text":"basically how mux works is an input is selected as output depending on the combination of selector variables for 4 inputs we need to have atleast 2 selector variable. 2 selector variable with create 4 unique combinations and we can link each one of those combination as a way to select one of the inputs as output so in this full adder we are trying to see that in what combination of A and B is sum/carryout =1 and what the value of Cin is in that instance. if you see truth table when a=0 and b=0 and sum = 1, cin is 1. so first input of 4x1 mux would be cin second if you see when a =0 and b=1 and sum = 1, cin is 0, that means second input of 4x1 mux would be cin complement in that way the final design of mux would look like similarly for the carry","title":"mental note"},{"location":"Notes/Hartley%20Oscillator/","text":"","title":"Hartley Oscillator"},{"location":"Notes/IC%20volate%20regulator/","text":"","title":"IC volate regulator"},{"location":"Notes/Implement%20full%20adder%20using%20two%20%5B%5Bhalf%20adders/","text":"","title":"Implement full adder using two [[half adders"},{"location":"Notes/Implement%20full%20adder%20using%20two%20half%20adders/","text":"Full Adder using Half Adder - YouTube","title":"Implement full adder using two half adders"},{"location":"Notes/LM317IC%20numerical/","text":"","title":"LM317IC numerical"},{"location":"Notes/Multiplexing%20Displays/","text":"","title":"Multiplexing Displays"},{"location":"Notes/N-bit%20full%20adder/","text":"","title":"N bit full adder"},{"location":"Notes/Realize%20full%20adder%20circuit%20using%202x4%20decoder%20and%20gates/","text":"Full Adder Implementation using Decoder - YouTube (Implementation of full adder using two 2 to 4 decoders and nand gate - YouTube 3 to 8 decoder using 2 to 4 decoders - YouTube","title":"Realize full adder circuit using 2x4 decoder and gates"},{"location":"Notes/Reciprocity%20and%20conditions/","text":"","title":"Reciprocity and conditions"},{"location":"Notes/Resonance%20in%20RLC%20series%20circuit/","text":"","title":"Resonance in RLC series circuit"},{"location":"Notes/Series%20DC%20Voltage%20regulator%20circuit%20with%20current%20limiting%20element/","text":"","title":"Series DC Voltage regulator circuit with current limiting element"},{"location":"Notes/Square%20wave%20oscillator%20using%20IC%20555/","text":"","title":"Square wave oscillator using IC 555"},{"location":"Notes/Square%20wave%20oscillator%20using%20operational%20amplifier/","text":"","title":"Square wave oscillator using operational amplifier"},{"location":"Notes/Time%20Measurement/","text":"","title":"Time Measurement"},{"location":"Notes/Truth%20table%20of%20full%20adder/","text":"","title":"Truth table of full adder"},{"location":"Notes/Untitled/","text":"","title":"Untitled"},{"location":"Notes/Voltage%20Regulator%20using%20bandgap%20reference/","text":"","title":"Voltage Regulator using bandgap reference"},{"location":"Notes/Voltage%20controlled%20oscillator%20circuit%20using%20IC%20555/","text":"","title":"Voltage controlled oscillator circuit using IC 555"},{"location":"Notes/Wein%20Bridge%20Oscillator/","text":"","title":"Wein Bridge Oscillator"},{"location":"Notes/adder-subtractor/","text":"Reference Video : https://www.youtube.com/watch?v=J7gPUP0aRug&t Another easier explaination video: 4 Bit - Adder Subtractor 4-bit full adder \u00b6 4-bit full subtractor \u00b6 4-bit subtractor using adder \u00b6 use of x-or gate \u00b6 adder-subtractor \u00b6 when ctr = 1, the circuit acts as subtractor when ctr = 0, the circuit acts as adder","title":"Adder subtractor"},{"location":"Notes/adder-subtractor/#4-bit-full-adder","text":"","title":"4-bit full adder"},{"location":"Notes/adder-subtractor/#4-bit-full-subtractor","text":"","title":"4-bit full subtractor"},{"location":"Notes/adder-subtractor/#4-bit-subtractor-using-adder","text":"","title":"4-bit subtractor using adder"},{"location":"Notes/adder-subtractor/#use-of-x-or-gate","text":"","title":"use of x-or gate"},{"location":"Notes/adder-subtractor/#adder-subtractor","text":"when ctr = 1, the circuit acts as subtractor when ctr = 0, the circuit acts as adder","title":"adder-subtractor"},{"location":"Notes/binary%20multiplication/","text":"","title":"Binary multiplication"},{"location":"Notes/full%20adder/","text":"Diagram \u00b6 Truth Table for full adder \u00b6 Kmap of full adder \u00b6 Solving for sum, Solving for carry, Full adder using gates \u00b6","title":"Full adder"},{"location":"Notes/full%20adder/#diagram","text":"","title":"Diagram"},{"location":"Notes/full%20adder/#truth-table-for-full-adder","text":"","title":"Truth Table for full adder"},{"location":"Notes/full%20adder/#kmap-of-full-adder","text":"Solving for sum, Solving for carry,","title":"Kmap of full adder"},{"location":"Notes/full%20adder/#full-adder-using-gates","text":"","title":"Full adder using gates"},{"location":"Notes/full%20subtractor%20circuit%20by%20combining%20only%20one%201%20is%20to%204%20demultiplexer%20and%20standard%20gates/","text":"","title":"Full subtractor circuit by combining only one 1 is to 4 demultiplexer and standard gates"},{"location":"Notes/regular%20expression%20for%20the%20language/","text":"","title":"Regular expression for the language"},{"location":"Subjects/DL/","text":"DL \u00b6 Question Pattern \u00b6 Chapter 1: Introduction - 6 marks Chapter 2: Digital logic - 4 marks Chapter 3: Combinational logic circuits - 8 marks Chapter 4: Data processing circuits - 10 marks Chapter 5: Arithmetic Circuits - 8 marks Chapter 6: Flipflops - 8 marks Chapter 7: Registers - 4 marks Chapter 8: Counters - 8 marks Chapter 9: Sequential Machines- 12 marks Chapter 10: Digital integrated circuits - 8 marks Chapter 11: Applications - 4 marks Chapter 1 \u00b6 Define with examples : Digital signal, analog signal, BCD code, gray code, combinational logic circuit, weighted code, non-weighted code, digital operations Advantages and disadvantages of BCD code Explain gray and excess 3 code with example Advantages of digital signal over analog signal Explain BCD code Characteristic of analog and digital signal Major differences between binary code and BCD code Explain different logical operations Different coding system used to represent data Conversion Chapter 2 \u00b6 List out the name of universal gates , why are they called so? Define : positive logic, negative logic Prove that X-OR is equivalent to negative X-NOR State and prove De-Morgan\u2019s theorems with necessary diagrams and examples Construct X-OR gate using minimum number of NAND gates Construct XOR gate using only 3-inputs NAND gates Prove that negative logic OR gate is equivalent to positive logic AND gate Show how a two- input NOR gate can be constructed from a two - input NAND gate Prove that NOR gate is an universal gate Realize EX-OR gate using only NAND gate Construct two input XOR gate using minimum number of 2-input NAND gates only Describe commutative and associative laws of Boolean algebra with example and simplify Implement EX-OR gate by using NAND gates only Explain the operation of NAND, NOR, NOT gates with boolean expression and truth table Construct given boolean function using gates Construct basic gates using only universal gates Chapter 3 \u00b6 Simplify the function using k-map and draw the circuit Obtain minimal SOP form Maxterm and minterm with example Minimize the expression and implement the reduced expression Obtain POS form Chapter 4 \u00b6 Design a 32 to 1 multiplexer using 16 to 1 and 2 to 1 multiplexer Design a 3- bit even parity generator and 4-bit even parity checker circuit Static hazard in combinational circuit, how these hazards can be covered Operation of BCD to decimal decoder with truth table and circuit diagram Implement 1:4 demux using VHDL Design a combinational logic that performs multiplication between 4 bit numbers using binary parallel adder and other gates What is priority encoder Design octal to binary priority encoder Design a 2 bit magnitude comparator Design 8 to 3 line priority encoder Design a combinational logic that produces square of 3 bit number using ROM Realize the circuit using MUX When FFh is ANDed with COh what will be the resulting number? 1\u2019s 2\u2019s 9\u2019s 10\u2019s complement Using seven segment display decoder realize the logic circuit for segment b, c, d Design a 32:1 MUX using 8:1 MUX . use block diagram Design a combinational logic circuit with 3 input variables that will produce logic high output when more than one input variables are logic low Realize a full subtractor using suitable demultiplexer and standard gates Multiplexer tree 1:32 demultiplexer using 1:8 and 1:2 demuxs Full adder circuit using 4:1 multiplexer Design a circuit that compares 2 4 bit numbers A and B , to check if they are equal, the circuit had one output x, sot hat x = 1 if A = B and x = 0 if A not equal to B Encoder? Draw the logic circuit of an encoder that converts octal number into binary Multiplexer tree ? Operation of 3 bit magnitude comparator with truth table and circuit Importance of parity bits in communication system Explain 3 bits odd parity generator circuit BCD to seven segment display decoder Octal priority encoder 4:2 priority encoder Chapter 5 \u00b6 N-bit full adder and explain its operation Define Fast adder . explain with examples Implement full adder using two half adders Diagram and operation of adder-subtractor circuit Subtraction from 1\u2019s and 2\u2019s complement method Full adder circuit using 4 is to 1 Multiplexer Draw the circuit to add 1011 and 1100 Explain the operation of two 4 bit parallel adder with diagram Realize full adder circuit using 2x4 decoder and gates Realize a full subtractor circuit by combining only one 1 is to 4 demultiplexer and standard gates . Design a combinational logic that performs multiplication between two 4 bit number using binary parallel adder and other gates. Explain working principle of binary multiplication Chapter 6 \u00b6 define flipflop Covert D - JK and JK - D Explain the operation of positive edge trigger SR flip-flop with excitation table. Derive its characteristic equation and state diagram Show logic diagram and characteristic table of JK flip-flop with excitation table. Derive its characteristic equation and state diagram Explain the operation of edge triggered JK flipflop with necessary diagram and excitation table Differentiate between level and edge triggering Drawbacks of jk flipflop Chapter 7 \u00b6 Define Shift Register. List its Types SISO circuit, timing diagram, operation explain SIPO circuit, timing diagram, operation explain PISO circuit, timing diagram, operation explain PIPO circuit, timing diagram, operation explain Application of register Chapter 8 \u00b6 Differentiate synchronous and asynchronous counter. Define Presettable Counter Asynchronous Up Counter Asynchronous Down Counter Asynchronous Ripple Up/Down Counter Synchronous Up Counter Synchronous Down Counter Synchronous Ripple Up/Down Counter Asynchronous MOD Counter Synchronous MOD Counter Chapter 9 \u00b6 Design sync. Sequential machine/circuit Chapter 11 \u00b6 Multiplexing Displays Frequency Counters Time Measurement Digital Clock","title":"DL"},{"location":"Subjects/DL/#dl","text":"","title":"DL"},{"location":"Subjects/DL/#question-pattern","text":"Chapter 1: Introduction - 6 marks Chapter 2: Digital logic - 4 marks Chapter 3: Combinational logic circuits - 8 marks Chapter 4: Data processing circuits - 10 marks Chapter 5: Arithmetic Circuits - 8 marks Chapter 6: Flipflops - 8 marks Chapter 7: Registers - 4 marks Chapter 8: Counters - 8 marks Chapter 9: Sequential Machines- 12 marks Chapter 10: Digital integrated circuits - 8 marks Chapter 11: Applications - 4 marks","title":"Question Pattern"},{"location":"Subjects/DL/#chapter-1","text":"Define with examples : Digital signal, analog signal, BCD code, gray code, combinational logic circuit, weighted code, non-weighted code, digital operations Advantages and disadvantages of BCD code Explain gray and excess 3 code with example Advantages of digital signal over analog signal Explain BCD code Characteristic of analog and digital signal Major differences between binary code and BCD code Explain different logical operations Different coding system used to represent data Conversion","title":"Chapter 1"},{"location":"Subjects/DL/#chapter-2","text":"List out the name of universal gates , why are they called so? Define : positive logic, negative logic Prove that X-OR is equivalent to negative X-NOR State and prove De-Morgan\u2019s theorems with necessary diagrams and examples Construct X-OR gate using minimum number of NAND gates Construct XOR gate using only 3-inputs NAND gates Prove that negative logic OR gate is equivalent to positive logic AND gate Show how a two- input NOR gate can be constructed from a two - input NAND gate Prove that NOR gate is an universal gate Realize EX-OR gate using only NAND gate Construct two input XOR gate using minimum number of 2-input NAND gates only Describe commutative and associative laws of Boolean algebra with example and simplify Implement EX-OR gate by using NAND gates only Explain the operation of NAND, NOR, NOT gates with boolean expression and truth table Construct given boolean function using gates Construct basic gates using only universal gates","title":"Chapter 2"},{"location":"Subjects/DL/#chapter-3","text":"Simplify the function using k-map and draw the circuit Obtain minimal SOP form Maxterm and minterm with example Minimize the expression and implement the reduced expression Obtain POS form","title":"Chapter 3"},{"location":"Subjects/DL/#chapter-4","text":"Design a 32 to 1 multiplexer using 16 to 1 and 2 to 1 multiplexer Design a 3- bit even parity generator and 4-bit even parity checker circuit Static hazard in combinational circuit, how these hazards can be covered Operation of BCD to decimal decoder with truth table and circuit diagram Implement 1:4 demux using VHDL Design a combinational logic that performs multiplication between 4 bit numbers using binary parallel adder and other gates What is priority encoder Design octal to binary priority encoder Design a 2 bit magnitude comparator Design 8 to 3 line priority encoder Design a combinational logic that produces square of 3 bit number using ROM Realize the circuit using MUX When FFh is ANDed with COh what will be the resulting number? 1\u2019s 2\u2019s 9\u2019s 10\u2019s complement Using seven segment display decoder realize the logic circuit for segment b, c, d Design a 32:1 MUX using 8:1 MUX . use block diagram Design a combinational logic circuit with 3 input variables that will produce logic high output when more than one input variables are logic low Realize a full subtractor using suitable demultiplexer and standard gates Multiplexer tree 1:32 demultiplexer using 1:8 and 1:2 demuxs Full adder circuit using 4:1 multiplexer Design a circuit that compares 2 4 bit numbers A and B , to check if they are equal, the circuit had one output x, sot hat x = 1 if A = B and x = 0 if A not equal to B Encoder? Draw the logic circuit of an encoder that converts octal number into binary Multiplexer tree ? Operation of 3 bit magnitude comparator with truth table and circuit Importance of parity bits in communication system Explain 3 bits odd parity generator circuit BCD to seven segment display decoder Octal priority encoder 4:2 priority encoder","title":"Chapter 4"},{"location":"Subjects/DL/#chapter-5","text":"N-bit full adder and explain its operation Define Fast adder . explain with examples Implement full adder using two half adders Diagram and operation of adder-subtractor circuit Subtraction from 1\u2019s and 2\u2019s complement method Full adder circuit using 4 is to 1 Multiplexer Draw the circuit to add 1011 and 1100 Explain the operation of two 4 bit parallel adder with diagram Realize full adder circuit using 2x4 decoder and gates Realize a full subtractor circuit by combining only one 1 is to 4 demultiplexer and standard gates . Design a combinational logic that performs multiplication between two 4 bit number using binary parallel adder and other gates. Explain working principle of binary multiplication","title":"Chapter 5"},{"location":"Subjects/DL/#chapter-6","text":"define flipflop Covert D - JK and JK - D Explain the operation of positive edge trigger SR flip-flop with excitation table. Derive its characteristic equation and state diagram Show logic diagram and characteristic table of JK flip-flop with excitation table. Derive its characteristic equation and state diagram Explain the operation of edge triggered JK flipflop with necessary diagram and excitation table Differentiate between level and edge triggering Drawbacks of jk flipflop","title":"Chapter 6"},{"location":"Subjects/DL/#chapter-7","text":"Define Shift Register. List its Types SISO circuit, timing diagram, operation explain SIPO circuit, timing diagram, operation explain PISO circuit, timing diagram, operation explain PIPO circuit, timing diagram, operation explain Application of register","title":"Chapter 7"},{"location":"Subjects/DL/#chapter-8","text":"Differentiate synchronous and asynchronous counter. Define Presettable Counter Asynchronous Up Counter Asynchronous Down Counter Asynchronous Ripple Up/Down Counter Synchronous Up Counter Synchronous Down Counter Synchronous Ripple Up/Down Counter Asynchronous MOD Counter Synchronous MOD Counter","title":"Chapter 8"},{"location":"Subjects/DL/#chapter-9","text":"Design sync. Sequential machine/circuit","title":"Chapter 9"},{"location":"Subjects/DL/#chapter-11","text":"Multiplexing Displays Frequency Counters Time Measurement Digital Clock","title":"Chapter 11"},{"location":"Subjects/ECT/","text":"ECT \u00b6 Question Pattern \u00b6 Chapter 1: Network Analysis of AC circuit - 8 marks Chapter 2: Initial Conditions - 8 marks Chapter 3: Transient analysis by direct solution - 16 marks Chapter 4: Transient analysis by Laplace Transfo - 16 marks Chapter 5: Frequency Response of Network - 8 marks Chapter 6: Fourier Series and transform - 8 marks Chapter 7: Two-Port Parameter of Network - 16 marks Chapter 1 (1 QN): \u00b6 Resonance in RLC series circuit Define half power frequencies and bandwidth in RLC series circuit and obtain an expression for them Resonance in a circuit consisting practical coil in parallel with a capacitor Derive an expression for impedance and current at resonating frequency Resonance in RLC parallel circuit Derive the expression for resonance frequency and draw the waveform of instantaneous voltage and current at resonance How does practical resonant circuit differ from ideal circuit Show that bandwidth of circuit is independent of capacitor value Why the shape of the resonance curve depends upon the Q-factor of a coil in a series RLC circuit Numericals Chapter 2 (1 QN): \u00b6 Behavior of the circuit at initial and final condition : Numerical Chapter 3 (2 QN): \u00b6 Under steady state - direct method Under steady state (classical method) - auxiliary equation Chapter 4 (2 QN) \u00b6 Laplace transform method Chapter 5 (1 QN): \u00b6 Asymptotic Bode-plot Theory: \u00b6 Explain zeros and poles Define Frequency Response and explain Chapter 6 (1 QN): \u00b6 Trigonometric / polar / exponential fourier series Plot the line spectrum Chapter 7 (2 QN): \u00b6 Find the parameters and also find whether the network is reciprocal or not Transfer functions Theory : \u00b6 Transmission from one parameters to another Product of matrix for cascade connection Reciprocity and conditions Symmetry and conditions Series Connection and its Z parameters Parallel Connection and its Y parameters","title":"ECT"},{"location":"Subjects/ECT/#ect","text":"","title":"ECT"},{"location":"Subjects/ECT/#question-pattern","text":"Chapter 1: Network Analysis of AC circuit - 8 marks Chapter 2: Initial Conditions - 8 marks Chapter 3: Transient analysis by direct solution - 16 marks Chapter 4: Transient analysis by Laplace Transfo - 16 marks Chapter 5: Frequency Response of Network - 8 marks Chapter 6: Fourier Series and transform - 8 marks Chapter 7: Two-Port Parameter of Network - 16 marks","title":"Question Pattern"},{"location":"Subjects/ECT/#chapter-1-1-qn","text":"Resonance in RLC series circuit Define half power frequencies and bandwidth in RLC series circuit and obtain an expression for them Resonance in a circuit consisting practical coil in parallel with a capacitor Derive an expression for impedance and current at resonating frequency Resonance in RLC parallel circuit Derive the expression for resonance frequency and draw the waveform of instantaneous voltage and current at resonance How does practical resonant circuit differ from ideal circuit Show that bandwidth of circuit is independent of capacitor value Why the shape of the resonance curve depends upon the Q-factor of a coil in a series RLC circuit Numericals","title":"Chapter 1 (1 QN):"},{"location":"Subjects/ECT/#chapter-2-1-qn","text":"Behavior of the circuit at initial and final condition : Numerical","title":"Chapter 2 (1 QN):"},{"location":"Subjects/ECT/#chapter-3-2-qn","text":"Under steady state - direct method Under steady state (classical method) - auxiliary equation","title":"Chapter 3 (2 QN):"},{"location":"Subjects/ECT/#chapter-4-2-qn","text":"Laplace transform method","title":"Chapter 4 (2 QN)"},{"location":"Subjects/ECT/#chapter-5-1-qn","text":"Asymptotic Bode-plot","title":"Chapter 5 (1 QN):"},{"location":"Subjects/ECT/#theory","text":"Explain zeros and poles Define Frequency Response and explain","title":"Theory:"},{"location":"Subjects/ECT/#chapter-6-1-qn","text":"Trigonometric / polar / exponential fourier series Plot the line spectrum","title":"Chapter 6 (1 QN):"},{"location":"Subjects/ECT/#chapter-7-2-qn","text":"Find the parameters and also find whether the network is reciprocal or not Transfer functions","title":"Chapter 7 (2 QN):"},{"location":"Subjects/ECT/#theory_1","text":"Transmission from one parameters to another Product of matrix for cascade connection Reciprocity and conditions Symmetry and conditions Series Connection and its Z parameters Parallel Connection and its Y parameters","title":"Theory :"},{"location":"Subjects/EDC/","text":"EDC \u00b6 Chapter 1: Diodes - 8 marks Chapter 2 : Bipolar Junction Transistor - 16 marks Chapter 3 : Field Effect Transistor - 16 marks Chapter 4 : Output Stages and Power Amplifiers - 14 marks Chapter 5 : Signal Generator and Waveform Shaping Circuits - 8 marks Chapter 6 : Power Supplies , Breakdown Diodes and Voltage Regulators - marks Remaining 10 marks from all subjects Useful Links \u00b6 Bikal Adhikari Lecture Playlist Chapter 1: \u00b6 Operating point for the diode circuit graphically using load line method Draw graph of IV characteristic of ordinary pn junction diode and zener diode, draw equivalent model for pn junction and derive its dynamic resistance Use of pn junction diode in forward biased state with the help of load line and IV characteristic Pn junction diode Large signal model of pn junction diode Significant of operating point of pn junction diode Draw dc load line with the help of diode circuit and its characteristic curve Small signal model of pn junction diode Define and explain reverse breakdown effects in diode Define modeling Small signal model of a semiconductor diode with necessary figure and derivation Draw graphs of IV characteristic of zener diode Draw ac equivalent model for pn junction diode and derive its ac resistance Chapter 2: \u00b6 Determine input resistance and output resistance of CC BJT amplifier circuit Why is common collector configuration used in the amplifier circuit design? Operation of BJT as switch with the help of NOT gate circuit Draw small signal model circuit for capacitor unbypassed CE amplifier and find its voltage gain and current gain Designing voltage divider bias(common emitter configuration) Operation of BJT as switch in cut off and saturation region Draw Ebers Moll model, low frequency pi model and simple T model for BJT Why is a common collector amplifier called an emitter follower? Draw common collector transistor amplifier circuit and find its input impedance, output impedance and voltage gain Describe Ebers Moll model for BJT Small signal model for common collector amplifier and find its input resistance and voltage gain Define transconductance, derive gm for BJT Draw ac equivalent circuit of common collector amplifier and find its input and output resistance Expression to find output resistance for emitter unbypassed common emitter amplifier circuit NUMERICALS Chapter 3: \u00b6 Working principle of N-channel EMOSFET, drain characteristic and mathematical expression Construction and working of N-channel JFET, drain characteristic and mathematical expression Operation of JFET in ohmic and active region of operations with the help of graph and expression Derive the expression to obtain transconductance of EMOSFET Construction and working of EMOSFET with the help of drain characteristic curve and mathematical expression Explain why self DC biasing MOSFET circuit is better than fixed DC biasing MOSFET circuit Derive an expression to find transconductance of JFET MOSFET numericals CHAPTER 4: \u00b6 General efficiency of transformer coupled class B push pull amplifier , draw the circuit and its characteristic graph (maximum loss condition) Explain how class AB amplifier eliminates the cross over distortion Draw the circuit diagram of RLC tuned class A amplifier and its frequency response graph and show that bandwidth = 1 / RC (3dB) and resonance frequency Cross over distortion , how can it be eliminated Why is the efficiency of class A tuned amplifier low? Expression of the general efficiency of series fed class A amplifier circuit Maximum efficiency of class B amplifier, state the condition when it occurs When are tuned amplifiers used? Circuit diagram of complementary symmetry class AB amplifier using Darlington pair transistor Circuit diagram of class A series fed amplifier with its characteristic graph General efficiency of transformer coupled class A power amplifier Circuit diagram of complementary symmetry class AB amplifier Push pull action in class B push pull amplifier Define crossover distortion in class B amplifier Draw quasi complementary symmetry class AB amplifier Why is a heat sink necessary in a power transistor? Explain with the help of thermal ohm\u2019s law or thermal resistance method Chapter 5 (Oscillators) \u00b6 AMV using 55 timer IC Hartley Oscillator Voltage controlled oscillator circuit using IC 555 Wein Bridge Oscillator Square wave oscillator using operational amplifier Square wave oscillator using IC 555 Colpitts Oscillator Chapter 6 (Voltage Regulators) \u00b6 DC Voltage Regulator and its stability factor Series DC Voltage regulator circuit with current limiting element Voltage Regulator using bandgap reference LM317IC numerical IC volate regulator","title":"EDC"},{"location":"Subjects/EDC/#edc","text":"Chapter 1: Diodes - 8 marks Chapter 2 : Bipolar Junction Transistor - 16 marks Chapter 3 : Field Effect Transistor - 16 marks Chapter 4 : Output Stages and Power Amplifiers - 14 marks Chapter 5 : Signal Generator and Waveform Shaping Circuits - 8 marks Chapter 6 : Power Supplies , Breakdown Diodes and Voltage Regulators - marks Remaining 10 marks from all subjects","title":"EDC"},{"location":"Subjects/EDC/#useful-links","text":"Bikal Adhikari Lecture Playlist","title":"Useful Links"},{"location":"Subjects/EDC/#chapter-1","text":"Operating point for the diode circuit graphically using load line method Draw graph of IV characteristic of ordinary pn junction diode and zener diode, draw equivalent model for pn junction and derive its dynamic resistance Use of pn junction diode in forward biased state with the help of load line and IV characteristic Pn junction diode Large signal model of pn junction diode Significant of operating point of pn junction diode Draw dc load line with the help of diode circuit and its characteristic curve Small signal model of pn junction diode Define and explain reverse breakdown effects in diode Define modeling Small signal model of a semiconductor diode with necessary figure and derivation Draw graphs of IV characteristic of zener diode Draw ac equivalent model for pn junction diode and derive its ac resistance","title":"Chapter 1:"},{"location":"Subjects/EDC/#chapter-2","text":"Determine input resistance and output resistance of CC BJT amplifier circuit Why is common collector configuration used in the amplifier circuit design? Operation of BJT as switch with the help of NOT gate circuit Draw small signal model circuit for capacitor unbypassed CE amplifier and find its voltage gain and current gain Designing voltage divider bias(common emitter configuration) Operation of BJT as switch in cut off and saturation region Draw Ebers Moll model, low frequency pi model and simple T model for BJT Why is a common collector amplifier called an emitter follower? Draw common collector transistor amplifier circuit and find its input impedance, output impedance and voltage gain Describe Ebers Moll model for BJT Small signal model for common collector amplifier and find its input resistance and voltage gain Define transconductance, derive gm for BJT Draw ac equivalent circuit of common collector amplifier and find its input and output resistance Expression to find output resistance for emitter unbypassed common emitter amplifier circuit NUMERICALS","title":"Chapter 2:"},{"location":"Subjects/EDC/#chapter-3","text":"Working principle of N-channel EMOSFET, drain characteristic and mathematical expression Construction and working of N-channel JFET, drain characteristic and mathematical expression Operation of JFET in ohmic and active region of operations with the help of graph and expression Derive the expression to obtain transconductance of EMOSFET Construction and working of EMOSFET with the help of drain characteristic curve and mathematical expression Explain why self DC biasing MOSFET circuit is better than fixed DC biasing MOSFET circuit Derive an expression to find transconductance of JFET MOSFET numericals","title":"Chapter 3:"},{"location":"Subjects/EDC/#chapter-4","text":"General efficiency of transformer coupled class B push pull amplifier , draw the circuit and its characteristic graph (maximum loss condition) Explain how class AB amplifier eliminates the cross over distortion Draw the circuit diagram of RLC tuned class A amplifier and its frequency response graph and show that bandwidth = 1 / RC (3dB) and resonance frequency Cross over distortion , how can it be eliminated Why is the efficiency of class A tuned amplifier low? Expression of the general efficiency of series fed class A amplifier circuit Maximum efficiency of class B amplifier, state the condition when it occurs When are tuned amplifiers used? Circuit diagram of complementary symmetry class AB amplifier using Darlington pair transistor Circuit diagram of class A series fed amplifier with its characteristic graph General efficiency of transformer coupled class A power amplifier Circuit diagram of complementary symmetry class AB amplifier Push pull action in class B push pull amplifier Define crossover distortion in class B amplifier Draw quasi complementary symmetry class AB amplifier Why is a heat sink necessary in a power transistor? Explain with the help of thermal ohm\u2019s law or thermal resistance method","title":"CHAPTER 4:"},{"location":"Subjects/EDC/#chapter-5-oscillators","text":"AMV using 55 timer IC Hartley Oscillator Voltage controlled oscillator circuit using IC 555 Wein Bridge Oscillator Square wave oscillator using operational amplifier Square wave oscillator using IC 555 Colpitts Oscillator","title":"Chapter 5 (Oscillators)"},{"location":"Subjects/EDC/#chapter-6-voltage-regulators","text":"DC Voltage Regulator and its stability factor Series DC Voltage regulator circuit with current limiting element Voltage Regulator using bandgap reference LM317IC numerical IC volate regulator","title":"Chapter 6 (Voltage Regulators)"},{"location":"Subjects/EM/","text":"EM \u00b6 Syllabus \u00b6 Chapter 1- Introduction - 5 marks Chapter 2 - Electric Field - 20 marks Chapter 3 - Magnetic Field - 16 marks Chapter 4 - Wave Equation - 21 marks Chapter 5,6,7 - Transmission Lines/Wave Guide/Antennas - 16 marks Files \u00b6 Formulas pdf Numerical PDF Insights PDF Chapter 1 \u00b6 only numericals Chapter 2 \u00b6 A coaxial cable has inner conductors of radius r1, outer conductor of radius r2, surface charge density on the surface of inner conductors is RHOs. use Gauss\u2019s law to derive an expression for electric field intensity in the region r1<= r<= r2 Define potential field Assuming the potential V in the spherical coordinate system is the function of \u201cr\u201d only, solve the laplacian equation and derive the expression for the capacitance of the spherical capacitor using the same solution of V State uniqueness theorem and prove the solution is unique using Poisson's equation Derive the equation of Energy Density in the electrostatic field Derive the laplacian equation Assuming the potential V in the cylindrical coordinate system is the function of \u201crho\u201d only, solve the laplacian equation by integration method and derive the expression for the capacitance of the cylindrical capacitor using the same solution of V Define electric dipole and polarization Assuming the potential V in the cylindrical coordinate system is the function of \u201crho\u201d only, solve the laplacian equation by integration method and derive the expression for the capacitance of the coaxial capacitor using the same solution of V State and write mathematical equation of gauss law Physical significance of potential gradient Explain continuity equation Derive the expression for the electric field intensity due to a infinitely long line charge with uniform charge density rho l by using gauss\u2019s law Physical significance of divergence Derive divergence theorem Derive poisson\u2019s equation By solving laplace\u2019s equation, find the capacitance of a parallel plate capacitor with potential difference between the plates equals V0 Define relaxation time constant (RTC). Derive an expression for RTC Derive the integral and point forms of continuity equation Using the continuity equation , elaborate the concept of relaxation time constant Define gradient and laplacian function Chapter 3: \u00b6 Define curl and its significance in electromagnetics Differentiate between scalar magnetic potential and vector magnetic potential Derive an expression of magnetic field intensity for an infinite filament carrying a direct current using vector magnetic potential Define scalar magnetic potential State ampere\u2019s circuital law Give physical interpretation of the curl with a suitable example Derive the equation for magnetic field intensity in different regions due to a coaxial cable carrying a uniformly distributed dc current I in the inner conductor and -I in the outer conductor Show that the vector magnetic potential can be defined in both the regions where J is equal or unequal to zero. Use the concept of vector magnetic potential to derive the magnetic field intensity due to an infinite current carrying filament carrying DC current I State and prove stoke\u2019s theorem Explain how ampere\u2019s law conflict with continuity equation and how is it corrected Show that scalar magnetic potential satisfies the laplace\u2019s equation Physical significance of equation B. DS = 0 Vector magnetic potential in differential form, Derive an expression for magnetic field intensity (h) due to infinite current carrying filament using biot savart\u2019s law Find the boundary condition for H and B at the interface between two isotropic homogeneous linear materials with permeabilities miu 1 and miu 2 Chapter 4: \u00b6 Define faraday\u2019s law Write down maxwell equation in phasor form Justify maxwell\u2019s equation Derive the expression for magnetic field and electric field for a uniform plane wave propagating in free space Derive conduction and displacement current in a capacitor Derive the equation for electric field for a uniform plane wave travelling in air State and derive the expression of motional emf(electromotive force) Derive expressions for reflection co-efficient and transmission co-efficient for the case of norrnal incidence at boundary between two dielectric media Define poynting vector, use this to deduce the time average power density for a dissipative medium / lossless dielectric. Write down maxwell equation in phasor form for time varying case in free space State and explain the maxwell\u2019s equation in differential and integral form , also define the displacement current and depth of penetration Establish relation for Helmholz\u2019s equation for electromagnetic wave propagation Prove poynting theorem (yo aaucha raa?) (if it is back question then we should ignore ) no risk Explain skin depth and loss tangent Derive an expression for input intrinsic impendence using the concept of reflection of uniform plane waves. Derive the expression for electric and magnetic fields for a uniform plane wave propagating in a perfect dielectric space. Write point form of all the maxwell\u2019s equation in phasor domain for perfect dielectric material, use these equations to derive the magnetic field component of a uniform plane wave travelling in the perfect dielectric medium Derive expression for input intrinsic impendence using the concept of reflection of uniform plane waves. How does V * H = J conflict with continuity equation in time varying fields. How is this conflict rectified in such fields? Derive the expression for electric and magnetic fields for a uniform plane wave propagating in a perfect dielectric space. Derive the expressions for reflection coefficient and transmission coefficient for the reflection of uniform waves at normal incidence. Chapter 5: \u00b6 Condition for lossless transmission line Derive and expression for SWR Reflection coefficient, SWR, input impedance numerical Propagation Coeff. Velocity, Characteristic impedance Derive equation of electric field and magnetic field and swr of standing wave Chapter 6: \u00b6 Short Note on TE and TM modes of rectangular waveguide Why TEM wave doesn\u2019t exist in a rectangular waveguide Advantages and disadvantages of waveguides when you compare it with transmission lines Explain TE and TM used in rectangular waveguides Difference between transmission line and waveguide Explain modes supported by rectangular waveguide Why does hollow rectangular waveguide not support TEM mode Define TEM What are the techniques that can be taken to match the transmission line Withmismatched load? Explain any one. Explain why is it possible to use waveguides at lower frequencies Rectangular waveguide cut off numerical, range of frequencies Average power load, minimum voltage numerical Chapter 7 [2 marks]: \u00b6 Short note about antenna Parameters/Properties Types of antennas","title":"EM"},{"location":"Subjects/EM/#em","text":"","title":"EM"},{"location":"Subjects/EM/#syllabus","text":"Chapter 1- Introduction - 5 marks Chapter 2 - Electric Field - 20 marks Chapter 3 - Magnetic Field - 16 marks Chapter 4 - Wave Equation - 21 marks Chapter 5,6,7 - Transmission Lines/Wave Guide/Antennas - 16 marks","title":"Syllabus"},{"location":"Subjects/EM/#files","text":"Formulas pdf Numerical PDF Insights PDF","title":"Files"},{"location":"Subjects/EM/#chapter-1","text":"only numericals","title":"Chapter 1"},{"location":"Subjects/EM/#chapter-2","text":"A coaxial cable has inner conductors of radius r1, outer conductor of radius r2, surface charge density on the surface of inner conductors is RHOs. use Gauss\u2019s law to derive an expression for electric field intensity in the region r1<= r<= r2 Define potential field Assuming the potential V in the spherical coordinate system is the function of \u201cr\u201d only, solve the laplacian equation and derive the expression for the capacitance of the spherical capacitor using the same solution of V State uniqueness theorem and prove the solution is unique using Poisson's equation Derive the equation of Energy Density in the electrostatic field Derive the laplacian equation Assuming the potential V in the cylindrical coordinate system is the function of \u201crho\u201d only, solve the laplacian equation by integration method and derive the expression for the capacitance of the cylindrical capacitor using the same solution of V Define electric dipole and polarization Assuming the potential V in the cylindrical coordinate system is the function of \u201crho\u201d only, solve the laplacian equation by integration method and derive the expression for the capacitance of the coaxial capacitor using the same solution of V State and write mathematical equation of gauss law Physical significance of potential gradient Explain continuity equation Derive the expression for the electric field intensity due to a infinitely long line charge with uniform charge density rho l by using gauss\u2019s law Physical significance of divergence Derive divergence theorem Derive poisson\u2019s equation By solving laplace\u2019s equation, find the capacitance of a parallel plate capacitor with potential difference between the plates equals V0 Define relaxation time constant (RTC). Derive an expression for RTC Derive the integral and point forms of continuity equation Using the continuity equation , elaborate the concept of relaxation time constant Define gradient and laplacian function","title":"Chapter 2"},{"location":"Subjects/EM/#chapter-3","text":"Define curl and its significance in electromagnetics Differentiate between scalar magnetic potential and vector magnetic potential Derive an expression of magnetic field intensity for an infinite filament carrying a direct current using vector magnetic potential Define scalar magnetic potential State ampere\u2019s circuital law Give physical interpretation of the curl with a suitable example Derive the equation for magnetic field intensity in different regions due to a coaxial cable carrying a uniformly distributed dc current I in the inner conductor and -I in the outer conductor Show that the vector magnetic potential can be defined in both the regions where J is equal or unequal to zero. Use the concept of vector magnetic potential to derive the magnetic field intensity due to an infinite current carrying filament carrying DC current I State and prove stoke\u2019s theorem Explain how ampere\u2019s law conflict with continuity equation and how is it corrected Show that scalar magnetic potential satisfies the laplace\u2019s equation Physical significance of equation B. DS = 0 Vector magnetic potential in differential form, Derive an expression for magnetic field intensity (h) due to infinite current carrying filament using biot savart\u2019s law Find the boundary condition for H and B at the interface between two isotropic homogeneous linear materials with permeabilities miu 1 and miu 2","title":"Chapter 3:"},{"location":"Subjects/EM/#chapter-4","text":"Define faraday\u2019s law Write down maxwell equation in phasor form Justify maxwell\u2019s equation Derive the expression for magnetic field and electric field for a uniform plane wave propagating in free space Derive conduction and displacement current in a capacitor Derive the equation for electric field for a uniform plane wave travelling in air State and derive the expression of motional emf(electromotive force) Derive expressions for reflection co-efficient and transmission co-efficient for the case of norrnal incidence at boundary between two dielectric media Define poynting vector, use this to deduce the time average power density for a dissipative medium / lossless dielectric. Write down maxwell equation in phasor form for time varying case in free space State and explain the maxwell\u2019s equation in differential and integral form , also define the displacement current and depth of penetration Establish relation for Helmholz\u2019s equation for electromagnetic wave propagation Prove poynting theorem (yo aaucha raa?) (if it is back question then we should ignore ) no risk Explain skin depth and loss tangent Derive an expression for input intrinsic impendence using the concept of reflection of uniform plane waves. Derive the expression for electric and magnetic fields for a uniform plane wave propagating in a perfect dielectric space. Write point form of all the maxwell\u2019s equation in phasor domain for perfect dielectric material, use these equations to derive the magnetic field component of a uniform plane wave travelling in the perfect dielectric medium Derive expression for input intrinsic impendence using the concept of reflection of uniform plane waves. How does V * H = J conflict with continuity equation in time varying fields. How is this conflict rectified in such fields? Derive the expression for electric and magnetic fields for a uniform plane wave propagating in a perfect dielectric space. Derive the expressions for reflection coefficient and transmission coefficient for the reflection of uniform waves at normal incidence.","title":"Chapter 4:"},{"location":"Subjects/EM/#chapter-5","text":"Condition for lossless transmission line Derive and expression for SWR Reflection coefficient, SWR, input impedance numerical Propagation Coeff. Velocity, Characteristic impedance Derive equation of electric field and magnetic field and swr of standing wave","title":"Chapter 5:"},{"location":"Subjects/EM/#chapter-6","text":"Short Note on TE and TM modes of rectangular waveguide Why TEM wave doesn\u2019t exist in a rectangular waveguide Advantages and disadvantages of waveguides when you compare it with transmission lines Explain TE and TM used in rectangular waveguides Difference between transmission line and waveguide Explain modes supported by rectangular waveguide Why does hollow rectangular waveguide not support TEM mode Define TEM What are the techniques that can be taken to match the transmission line Withmismatched load? Explain any one. Explain why is it possible to use waveguides at lower frequencies Rectangular waveguide cut off numerical, range of frequencies Average power load, minimum voltage numerical","title":"Chapter 6:"},{"location":"Subjects/EM/#chapter-7-2-marks","text":"Short note about antenna Parameters/Properties Types of antennas","title":"Chapter 7 [2 marks]:"},{"location":"Subjects/Math/","text":"Math \u00b6 Question pattern \u00b6 Chapter 1: Matrix - 20 marks Chapter 2: Integration - 20 marks Chapter 3: Laplace Transform - 15 marks Chapter 4: Fourier Series - 10 marks Chapter 5: Simplex/Two Phase/Big M Method - 15 marks Questions \u00b6 Chapter 1 \u00b6 Determinant Evaluate Theorem Proof Rank and its Normal form Rank and consistency Cayley-Hamilton and Inverse State Cayley-Hamilton theorem Modal Matrix and Diagonal Matrix Eigen Values and Eigen Vectors Chapter 2 \u00b6 Verify stoke's theorem State Stoke's theorem Evaluate volume integral Green's theroem State and prove Green's theorem in the plane Evaluate area Evaluate normal surface integral Evaluate using Gauss divegrence theorem State Gauss divegence theorem Scalar potential function Theorem Proofs Chapter 3 \u00b6 Laplace transform Inverse Laplace transform Solving Differential Equation Second Shifting theorem proof Chapter 4 \u00b6 Trigonometric Full Range Half range sine and cosine Chapter 5 \u00b6 Graphically Simplex Method","title":"Math"},{"location":"Subjects/Math/#math","text":"","title":"Math"},{"location":"Subjects/Math/#question-pattern","text":"Chapter 1: Matrix - 20 marks Chapter 2: Integration - 20 marks Chapter 3: Laplace Transform - 15 marks Chapter 4: Fourier Series - 10 marks Chapter 5: Simplex/Two Phase/Big M Method - 15 marks","title":"Question pattern"},{"location":"Subjects/Math/#questions","text":"","title":"Questions"},{"location":"Subjects/Math/#chapter-1","text":"Determinant Evaluate Theorem Proof Rank and its Normal form Rank and consistency Cayley-Hamilton and Inverse State Cayley-Hamilton theorem Modal Matrix and Diagonal Matrix Eigen Values and Eigen Vectors","title":"Chapter 1"},{"location":"Subjects/Math/#chapter-2","text":"Verify stoke's theorem State Stoke's theorem Evaluate volume integral Green's theroem State and prove Green's theorem in the plane Evaluate area Evaluate normal surface integral Evaluate using Gauss divegrence theorem State Gauss divegence theorem Scalar potential function Theorem Proofs","title":"Chapter 2"},{"location":"Subjects/Math/#chapter-3","text":"Laplace transform Inverse Laplace transform Solving Differential Equation Second Shifting theorem proof","title":"Chapter 3"},{"location":"Subjects/Math/#chapter-4","text":"Trigonometric Full Range Half range sine and cosine","title":"Chapter 4"},{"location":"Subjects/Math/#chapter-5","text":"Graphically Simplex Method","title":"Chapter 5"},{"location":"Subjects/OOP/","text":"OOP \u00b6 Question Pattern \u00b6 Chapter 1 : Introduction to object oriented programming Chapter 2 : Introduction to c++ Chapter 3 : C++ language constructs Chapter 4 : Objects and classes Chapter 5 : Operator overloading Chapter 6 : Inheritance Chapter 7 : Polymorphism and dynamic binding Chapter 8 : Stream Computation for console and file I/O Chapter 9 : Templates Chapter 10 : Execution Handling Chapter 1,2,4 - 20 marks Chapter 7,9,10 - 20 marks Chapter 3,5,6,8 - 10 marks each Chapter 1 : \u00b6 Characteristics of OOP Differences between OOP and POP Limitations of POP Advantages / Disadvantages of OOP over POP What is OOP? What is data abstraction? Compare data abstraction with encapsulation in C++ Concept of class in C++ Why OOP is necessary in programming Is OOP better than structured programming? Why? PROGRAMS!! Chapter 2: \u00b6 Features of C++ Advantage of C++ over C History of C++ Different components (Lexical elements) of C++ Need of C++ Chapter 3: \u00b6 Theory: \u00b6 Explain how function selection is done in function overloading? Where can enumerated data types be used in C++ programming? How does an inline function differ from a pre-processor macro? Main advantage of passing argument by reference Explain the usage of \u2018new\u2019 and \u2018delete\u2019 operators for DMA Define inline function with its pros and cons Explain how the use of default argument supports the function overloading What do you understand by default arguments How can you relate default argument function with function overloading? What is function overloading with examples? How is pass by reference done in C++ with suitable examples? What is Token, write its details? How can a function with default argument be implemented with function overloading. Show example Why default arguments are used with functions. Define DMA and how do you use it in C++ Significance of reference variable with suitable example What is literals and identifier What do you mean by namespace and explain how it can be used Programs: \u00b6 WAP to find volume of different shapes using function overloading WAP a program to swap two numbers using pass by reference concept WAP to calculate and display the cube of integer, float and double number using function overloading WAP to join two strings using dynamic constructor concept Chapter 4: \u00b6 Theory: \u00b6 Order of constructor and destructor invocation with example Use of static data member and static function in a class with example Define constructor and destructor Different types of constructor with examples Properties of constructor Differences between copy constructor and assignment operator A friend function is not a member of any classes but has full access to the members of class where it is declared as friend. Task of const keyword Can we have more than one constructor in a class? Explain Necessity of copy constructor with examples Constant function and its relation with constant object Necessity of friend function How any member function of a class can be friend of other class , explain with example Define \u201cthis\u201d pointer with its applications Why don\u2019t you use an object to call the static member function, explain with an example? Why do you need to use reference in the argument to the copy constructor? Necessity of constructor Dynamic memory allocation for object and object array Difference between constructor and destructor Dynamic memory allocation Friend function and friend class Programs: \u00b6 Chapter 5: \u00b6 Theory: \u00b6 Define operator overloading Need of operator overloading Overloading operator using member function and non member function Binary and unary operator overloading along with their syntax and example Data conversion from one type to another Disadvantages of using operator overloading List of operators that can\u2019t be overloaded in C++ Explicit constructor with an example Overloading relational operator using member function and nonmember function Syntax of operator overloading for various case Rules of operator overloading Overriding differs from overloading, how? Programs: \u00b6 WAP to overload relational operators(==, !=, >,<,>=,<=) to compare complex numbers WAP to add two matrices by overloading + operator WAP to define a class distance with necessary data members and functions then overload the relational operators to compare the two objects of Distance class WAP having a class to represent money,the class should have two integer members to represent rupees and paisa. Overload + and - operators for adding and subtracting the objects , then overload >, < , == and !+ operators for comparing the objects Write a program to convert currency from dollar to rupees and vice versa (assume suitable data). WAP using a class to with 3 * 3 matrix as a data member. Overload the * operator so as to multiply two matrices Write a program that will convert object from a class Rectangle to object of a class Polar using Casting Operator. Create a class named city that will have two member variables cityname (char[20]) and distfromktm (float). Add member function to set and retrieve the cityname and distfromktm separately. Add operator overloading to find the distance between the cities (just find the difference of distfromktm) and sum of distance of those cities from kathmandu. In main function, initialize three city objects.Set the first and second city to be pokhara and dhangadi .display the sum of distfomktm of pokhara and dhangadi and distance between pokhara and dhangadi WAP to overload the relational operators to compare the length (in meter and centimeter) of two objects Write operator functions as member function of a class to overload arithmetic operator +, logical operator \u2018<=\u2019 and stream operator \u2018<<\u2019 to operate on the objects of user defined type time (hr, min, sec) WAP to concatenate two user given string by overloading binary plus(+) operator Create a class called time that has separate int member data for hours, minutes and second. One constructor should initialize this data to zero(0), and another should initialize it to fixed values. A member function should display it in 10:45:30 format. The final member function should add two objects of type time passed as arguments using operator overloading. Write a class that represent the distance class and overload ++ and \u2013 operator to increment and decrement distance WAP that converts object of celsius type to object of fahrenheit type Write a program to overload relational operators ( <, >=, <=) to compare complex numbers. Write a program to define a Class Distance with necessary data members and functions. Then overload the relational operators to compare the two objects of Distance class. Chapter 6: \u00b6 Theory: \u00b6 Types of inheritance Need of virtual base class with example Forms of inheritance with example of each Need and importance of inheritance Ambiguity problem in multiple inheritance Details on member function overriding Ambiguity and function overriding , define and how can they be resolved, examples Use of scope resolution with overridden function Accessing every overridden function from derived class with example Need of virtual base class Access specifier and its types with syntax Constructor and destructor invocation order in single and multiple inheritance Show how parameterized base class constructor is called when derived class object are created Different types of derivation affecting the members of class Programs: \u00b6 WAP to demonstrate example of hierarchical inheritance WAP which contains a base class that ask the user to enter a complex number and make a derived class that adds the complex number of its own with the base. Finally make third class that is friend of derived and calculate the difference of base complex number and it\u2019s own complex number WAP to show order of constructor invocation in multiple inheritance Chapter 7 \u00b6 Need of virtual function with example Run time type information (RTTI) Use of dynamic_cast and typeid operators to achieve RTTI (imp) Define: virtual function, pure virtual functions, abstract class, polymorphic class Abstract class and its uses Task of reinterpret_cast operator Reason for member function overriding when using virtual function Need of virtual destructor, with example Compile time and runtime binding Differentiate abstract base class and concrete class Role of virtual functions in c++ to cause dynamic polymorphism, how is it diff from the compile time polymorphism RTTI mechanism Use of pure virtual function Chapter 8 (File Handling) \u00b6 Theory: \u00b6 Write down the different techniques for formatting i/0 stream with example. Explain the different errors encountered during file operation. What do you mean by manipulators? Explain different manipulators available in C++. List the features that are used in formatting the output. Explain each wiith example: Explain class hierarchy for console and file I/O with diagram. What are different ios class function and flags that are used for formatted I/O operation? Stream class hierarchy List any four formatting flags of ios class with their usage. Explain with an example how a non- parameterized user-defined manipulator can be defined. Explain how do you achieve random access to file Discuss about classes for file stream operator with suitable block diagram File access pointer and manipulator Stream manipulator Program \u00b6 Write a program that stores information of students in a file and display the file's content in descending order according to their marks obtained. Write a program to read and write information of 10 students in a file Write a program for transaction processing that write and read objects randomly to and from a random access file so that the user can add, update, delete and display the account information (accountnumber, lastname, firstname, totalbalance). Write a program to make the billing system of a department store. Your program should store and retrieve data to/from files. Use manipulators to display the record in proper formats. Write a program to store and retrieve the information of Client(Client_ID, Account_ll), name, address and age) in the Bank management system. Also calculate the total number of clients in a bank Write a program to write records of N numbers of students into the file. And your program should search complete information of students from a file according to the CRN entered by the user and display it. Chapter 9(Templates) \u00b6 Theory: \u00b6 Define class template and function template with respective syntax. Importance of function template and class template How can default arguments be used in class template Use of function template with multiple template types with examples Use of function template Function template overloading with example Case when all the template parameters are not used in function arguments Program \u00b6 Write a program that will find the sum and average of elements in an array using function templates. Write a program for man\u00e5sing a simple library database. The information to be stored in the database are book id, book name, borrower's id, borrower's name, issue date and due date. Your program should have features to add a record, display all the records and display a set of records corresponding to a particular borrower's id or a particular borrower's name. Write a program using template to add two integers, two floats and one integer and one float respectively. Display the final result in float. Chapter 10 \u00b6 Theory: \u00b6 What are the different exception handling techniques in C++? Explain with appropriate examples. How is exception handling better than conventional/traditional error handling? Handling of multiple exceptions with example Advantages of exception handling Exception handling constructs:tasks of try, catch and throw block How do you throw only specified exception from a function, exemplify What do you understand by rethrowing an exception and catching all exceptions Programs : \u00b6 Define a class to represent time. It should have a member function to read time from the user and a member function to display the time. The function to read time must raise an exception if the user enters invalid values for hours, minutes or seconds. The exception throws should contain arguments. The exception should be handled outside cf the member function of the class. Write a program to find the square root of given number. Check the validity of input number and raise the exception as per requirement. Write a program to read your Date of Birth and display it. Your program should throw multiple exceptions for day, month and other values not in range using exception Class and catch exception is handled by a separate handler. Write a program to create a class to represent stack data structure and use exception handling to control empty and full cases.","title":"OOP"},{"location":"Subjects/OOP/#oop","text":"","title":"OOP"},{"location":"Subjects/OOP/#question-pattern","text":"Chapter 1 : Introduction to object oriented programming Chapter 2 : Introduction to c++ Chapter 3 : C++ language constructs Chapter 4 : Objects and classes Chapter 5 : Operator overloading Chapter 6 : Inheritance Chapter 7 : Polymorphism and dynamic binding Chapter 8 : Stream Computation for console and file I/O Chapter 9 : Templates Chapter 10 : Execution Handling Chapter 1,2,4 - 20 marks Chapter 7,9,10 - 20 marks Chapter 3,5,6,8 - 10 marks each","title":"Question Pattern"},{"location":"Subjects/OOP/#chapter-1","text":"Characteristics of OOP Differences between OOP and POP Limitations of POP Advantages / Disadvantages of OOP over POP What is OOP? What is data abstraction? Compare data abstraction with encapsulation in C++ Concept of class in C++ Why OOP is necessary in programming Is OOP better than structured programming? Why? PROGRAMS!!","title":"Chapter 1 :"},{"location":"Subjects/OOP/#chapter-2","text":"Features of C++ Advantage of C++ over C History of C++ Different components (Lexical elements) of C++ Need of C++","title":"Chapter 2:"},{"location":"Subjects/OOP/#chapter-3","text":"","title":"Chapter 3:"},{"location":"Subjects/OOP/#theory","text":"Explain how function selection is done in function overloading? Where can enumerated data types be used in C++ programming? How does an inline function differ from a pre-processor macro? Main advantage of passing argument by reference Explain the usage of \u2018new\u2019 and \u2018delete\u2019 operators for DMA Define inline function with its pros and cons Explain how the use of default argument supports the function overloading What do you understand by default arguments How can you relate default argument function with function overloading? What is function overloading with examples? How is pass by reference done in C++ with suitable examples? What is Token, write its details? How can a function with default argument be implemented with function overloading. Show example Why default arguments are used with functions. Define DMA and how do you use it in C++ Significance of reference variable with suitable example What is literals and identifier What do you mean by namespace and explain how it can be used","title":"Theory:"},{"location":"Subjects/OOP/#programs","text":"WAP to find volume of different shapes using function overloading WAP a program to swap two numbers using pass by reference concept WAP to calculate and display the cube of integer, float and double number using function overloading WAP to join two strings using dynamic constructor concept","title":"Programs:"},{"location":"Subjects/OOP/#chapter-4","text":"","title":"Chapter 4:"},{"location":"Subjects/OOP/#theory_1","text":"Order of constructor and destructor invocation with example Use of static data member and static function in a class with example Define constructor and destructor Different types of constructor with examples Properties of constructor Differences between copy constructor and assignment operator A friend function is not a member of any classes but has full access to the members of class where it is declared as friend. Task of const keyword Can we have more than one constructor in a class? Explain Necessity of copy constructor with examples Constant function and its relation with constant object Necessity of friend function How any member function of a class can be friend of other class , explain with example Define \u201cthis\u201d pointer with its applications Why don\u2019t you use an object to call the static member function, explain with an example? Why do you need to use reference in the argument to the copy constructor? Necessity of constructor Dynamic memory allocation for object and object array Difference between constructor and destructor Dynamic memory allocation Friend function and friend class","title":"Theory:"},{"location":"Subjects/OOP/#programs_1","text":"","title":"Programs:"},{"location":"Subjects/OOP/#chapter-5","text":"","title":"Chapter 5:"},{"location":"Subjects/OOP/#theory_2","text":"Define operator overloading Need of operator overloading Overloading operator using member function and non member function Binary and unary operator overloading along with their syntax and example Data conversion from one type to another Disadvantages of using operator overloading List of operators that can\u2019t be overloaded in C++ Explicit constructor with an example Overloading relational operator using member function and nonmember function Syntax of operator overloading for various case Rules of operator overloading Overriding differs from overloading, how?","title":"Theory:"},{"location":"Subjects/OOP/#programs_2","text":"WAP to overload relational operators(==, !=, >,<,>=,<=) to compare complex numbers WAP to add two matrices by overloading + operator WAP to define a class distance with necessary data members and functions then overload the relational operators to compare the two objects of Distance class WAP having a class to represent money,the class should have two integer members to represent rupees and paisa. Overload + and - operators for adding and subtracting the objects , then overload >, < , == and !+ operators for comparing the objects Write a program to convert currency from dollar to rupees and vice versa (assume suitable data). WAP using a class to with 3 * 3 matrix as a data member. Overload the * operator so as to multiply two matrices Write a program that will convert object from a class Rectangle to object of a class Polar using Casting Operator. Create a class named city that will have two member variables cityname (char[20]) and distfromktm (float). Add member function to set and retrieve the cityname and distfromktm separately. Add operator overloading to find the distance between the cities (just find the difference of distfromktm) and sum of distance of those cities from kathmandu. In main function, initialize three city objects.Set the first and second city to be pokhara and dhangadi .display the sum of distfomktm of pokhara and dhangadi and distance between pokhara and dhangadi WAP to overload the relational operators to compare the length (in meter and centimeter) of two objects Write operator functions as member function of a class to overload arithmetic operator +, logical operator \u2018<=\u2019 and stream operator \u2018<<\u2019 to operate on the objects of user defined type time (hr, min, sec) WAP to concatenate two user given string by overloading binary plus(+) operator Create a class called time that has separate int member data for hours, minutes and second. One constructor should initialize this data to zero(0), and another should initialize it to fixed values. A member function should display it in 10:45:30 format. The final member function should add two objects of type time passed as arguments using operator overloading. Write a class that represent the distance class and overload ++ and \u2013 operator to increment and decrement distance WAP that converts object of celsius type to object of fahrenheit type Write a program to overload relational operators ( <, >=, <=) to compare complex numbers. Write a program to define a Class Distance with necessary data members and functions. Then overload the relational operators to compare the two objects of Distance class.","title":"Programs:"},{"location":"Subjects/OOP/#chapter-6","text":"","title":"Chapter 6:"},{"location":"Subjects/OOP/#theory_3","text":"Types of inheritance Need of virtual base class with example Forms of inheritance with example of each Need and importance of inheritance Ambiguity problem in multiple inheritance Details on member function overriding Ambiguity and function overriding , define and how can they be resolved, examples Use of scope resolution with overridden function Accessing every overridden function from derived class with example Need of virtual base class Access specifier and its types with syntax Constructor and destructor invocation order in single and multiple inheritance Show how parameterized base class constructor is called when derived class object are created Different types of derivation affecting the members of class","title":"Theory:"},{"location":"Subjects/OOP/#programs_3","text":"WAP to demonstrate example of hierarchical inheritance WAP which contains a base class that ask the user to enter a complex number and make a derived class that adds the complex number of its own with the base. Finally make third class that is friend of derived and calculate the difference of base complex number and it\u2019s own complex number WAP to show order of constructor invocation in multiple inheritance","title":"Programs:"},{"location":"Subjects/OOP/#chapter-7","text":"Need of virtual function with example Run time type information (RTTI) Use of dynamic_cast and typeid operators to achieve RTTI (imp) Define: virtual function, pure virtual functions, abstract class, polymorphic class Abstract class and its uses Task of reinterpret_cast operator Reason for member function overriding when using virtual function Need of virtual destructor, with example Compile time and runtime binding Differentiate abstract base class and concrete class Role of virtual functions in c++ to cause dynamic polymorphism, how is it diff from the compile time polymorphism RTTI mechanism Use of pure virtual function","title":"Chapter 7"},{"location":"Subjects/OOP/#chapter-8-file-handling","text":"","title":"Chapter 8 (File Handling)"},{"location":"Subjects/OOP/#theory_4","text":"Write down the different techniques for formatting i/0 stream with example. Explain the different errors encountered during file operation. What do you mean by manipulators? Explain different manipulators available in C++. List the features that are used in formatting the output. Explain each wiith example: Explain class hierarchy for console and file I/O with diagram. What are different ios class function and flags that are used for formatted I/O operation? Stream class hierarchy List any four formatting flags of ios class with their usage. Explain with an example how a non- parameterized user-defined manipulator can be defined. Explain how do you achieve random access to file Discuss about classes for file stream operator with suitable block diagram File access pointer and manipulator Stream manipulator","title":"Theory:"},{"location":"Subjects/OOP/#program","text":"Write a program that stores information of students in a file and display the file's content in descending order according to their marks obtained. Write a program to read and write information of 10 students in a file Write a program for transaction processing that write and read objects randomly to and from a random access file so that the user can add, update, delete and display the account information (accountnumber, lastname, firstname, totalbalance). Write a program to make the billing system of a department store. Your program should store and retrieve data to/from files. Use manipulators to display the record in proper formats. Write a program to store and retrieve the information of Client(Client_ID, Account_ll), name, address and age) in the Bank management system. Also calculate the total number of clients in a bank Write a program to write records of N numbers of students into the file. And your program should search complete information of students from a file according to the CRN entered by the user and display it.","title":"Program"},{"location":"Subjects/OOP/#chapter-9templates","text":"","title":"Chapter 9(Templates)"},{"location":"Subjects/OOP/#theory_5","text":"Define class template and function template with respective syntax. Importance of function template and class template How can default arguments be used in class template Use of function template with multiple template types with examples Use of function template Function template overloading with example Case when all the template parameters are not used in function arguments","title":"Theory:"},{"location":"Subjects/OOP/#program_1","text":"Write a program that will find the sum and average of elements in an array using function templates. Write a program for man\u00e5sing a simple library database. The information to be stored in the database are book id, book name, borrower's id, borrower's name, issue date and due date. Your program should have features to add a record, display all the records and display a set of records corresponding to a particular borrower's id or a particular borrower's name. Write a program using template to add two integers, two floats and one integer and one float respectively. Display the final result in float.","title":"Program"},{"location":"Subjects/OOP/#chapter-10","text":"","title":"Chapter 10"},{"location":"Subjects/OOP/#theory_6","text":"What are the different exception handling techniques in C++? Explain with appropriate examples. How is exception handling better than conventional/traditional error handling? Handling of multiple exceptions with example Advantages of exception handling Exception handling constructs:tasks of try, catch and throw block How do you throw only specified exception from a function, exemplify What do you understand by rethrowing an exception and catching all exceptions","title":"Theory:"},{"location":"Subjects/OOP/#programs_4","text":"Define a class to represent time. It should have a member function to read time from the user and a member function to display the time. The function to read time must raise an exception if the user enters invalid values for hours, minutes or seconds. The exception throws should contain arguments. The exception should be handled outside cf the member function of the class. Write a program to find the square root of given number. Check the validity of input number and raise the exception as per requirement. Write a program to read your Date of Birth and display it. Your program should throw multiple exceptions for day, month and other values not in range using exception Class and catch exception is handled by a separate handler. Write a program to create a class to represent stack data structure and use exception handling to control empty and full cases.","title":"Programs :"},{"location":"Subjects/TOC/","text":"TOC \u00b6 Syllabus: \u00b6 Chapter 1 : Introduction - 7 marks Chapter 2 : Finite Automata - 21 marks Chapter 3 : Context Free Grammar - 21 marks Chapter 4 : Turing Machine - 17 marks Chapter 5 : Undecidability - 9 marks Chapter 6 : Computational Complexity - 5 marks Important Links \u00b6 https://www.youtube.com/watch?v=miOofcAiINM&list=PLAXUYU7PbJhgWcNElVZiIAeG6HUSTW0PS&index=8 Chapter 1 \u00b6 Define regular expression Prove by mathematical induction Write a regular expression for the language Explain equivalence relations and partial order relations with examples of each Define induction principle State and Explain pigeonhole principle with suitable example Explain the diagonalization principle with an example Define diagonalization principle Explain dovetailing technique with suitable example Define cartesian product Define countably infinite and uncountable sets with example Use of pigeonhole principle Chapter 2 \u00b6 Define finite state automata with its block diagram Design DFA Formally define a non deterministic finite automata Using pumping lemma , show that the language is not regular Convert e-NFA / NFA to DFA Configuration of DFA How can you prove some languages are not regular Prove that set of regular languages are closed under complementation and intersection operations Define e-NFA formally State the pumping lemma for regular languages List closure properties of regular language Distinguish between DFA and NDFA What is closure property Prove that regular language are closed under union, concatenation and kleene star operation Application of pumping lemma Components of finite automata If m and n are any two regular languages then show that their union is regular language Application of finite automata Significance of finite automata Why is NDFA important although it is equivalent to DFA Design NFA Prove closure properties of regular language Explain about decision algorithms for regular language Show that if a language is accepted then it is accepted by finite automata Define configuration in reference to finite automata Define DFA formally Prove that language which contains set of stings of balanced parentheses is not regular Chapter 3: \u00b6 Formally define PDA Design PDA State pumping lemma for context free languages and explain with suitable examples Write CFG Convert CFG to CNF State chomsky normal form (CNF) Define context free grammar with example Describe the transition function of PDA Define the term ambiguity and inherent ambiguity in parse tree Differences between CFG and unrestricted grammar with example Using pumping lemma, show the CFG is not context free Configuration of PDA Use concept of closure property to prove that intersection of context free language is not context free Role of parse tree in context free grammar Additional feature PDA has when compared with FA Ambiguous grammar with example Decision properties of context free language Prove that context free languages are closed under union and concatenation operation Inherent ambiguity in grammar Operation of PDA Chapter 4: \u00b6 Construct a turing machine that transform Design a turing machin that computes Define turing machine and multitape turing machine How does turing machine works explain Describe the working of Turing machine with block diagram How can we represent configuration of Turing Machine State and explain rules for combining turing machine Compare turing machine with FA and PDA Define head shifting and symbol writing Turing machines Define the term configuration of turing machine Compare multitape turing machine with single tape turing machine What is unrestricted grammar? How unrestricted grammar can be defined as super set of CFG and Regular Grammar Is there any difference between unrestricted grammar and CFG explain Construct a grammar that accepts the language Explain turing recognition and turing decidable language Multitape turing machine design Chapter 5: \u00b6 Explain undecidable problems Explain Halting Problem with examples. Prove its unsolvable What do you mean by Church Turing Thesis? Why is it called a thesis? \\ What is algorithm according to church turing thesis Define the term Turing Decidable Define recursive and recursively enumerable language Proof of properties of recursive language What is the significance of the Universal Turing Machine? Explain working mechanism Explain encoding technique of universal turing machine Chapter 6: \u00b6 Define polynomial time reduction and computational complexity Explain about class P and NP problems with examples Describe traveling salesman problem Computational complexity of an algorithm Complexity theory Why is it important to deal with computational problems NP hard and NP complete problems with reference to polynomial time reduction Two factors affecting computational complexity of a problem How do class P and class NP relate to NP complete problems","title":"TOC"},{"location":"Subjects/TOC/#toc","text":"","title":"TOC"},{"location":"Subjects/TOC/#syllabus","text":"Chapter 1 : Introduction - 7 marks Chapter 2 : Finite Automata - 21 marks Chapter 3 : Context Free Grammar - 21 marks Chapter 4 : Turing Machine - 17 marks Chapter 5 : Undecidability - 9 marks Chapter 6 : Computational Complexity - 5 marks","title":"Syllabus:"},{"location":"Subjects/TOC/#important-links","text":"https://www.youtube.com/watch?v=miOofcAiINM&list=PLAXUYU7PbJhgWcNElVZiIAeG6HUSTW0PS&index=8","title":"Important Links"},{"location":"Subjects/TOC/#chapter-1","text":"Define regular expression Prove by mathematical induction Write a regular expression for the language Explain equivalence relations and partial order relations with examples of each Define induction principle State and Explain pigeonhole principle with suitable example Explain the diagonalization principle with an example Define diagonalization principle Explain dovetailing technique with suitable example Define cartesian product Define countably infinite and uncountable sets with example Use of pigeonhole principle","title":"Chapter 1"},{"location":"Subjects/TOC/#chapter-2","text":"Define finite state automata with its block diagram Design DFA Formally define a non deterministic finite automata Using pumping lemma , show that the language is not regular Convert e-NFA / NFA to DFA Configuration of DFA How can you prove some languages are not regular Prove that set of regular languages are closed under complementation and intersection operations Define e-NFA formally State the pumping lemma for regular languages List closure properties of regular language Distinguish between DFA and NDFA What is closure property Prove that regular language are closed under union, concatenation and kleene star operation Application of pumping lemma Components of finite automata If m and n are any two regular languages then show that their union is regular language Application of finite automata Significance of finite automata Why is NDFA important although it is equivalent to DFA Design NFA Prove closure properties of regular language Explain about decision algorithms for regular language Show that if a language is accepted then it is accepted by finite automata Define configuration in reference to finite automata Define DFA formally Prove that language which contains set of stings of balanced parentheses is not regular","title":"Chapter 2"},{"location":"Subjects/TOC/#chapter-3","text":"Formally define PDA Design PDA State pumping lemma for context free languages and explain with suitable examples Write CFG Convert CFG to CNF State chomsky normal form (CNF) Define context free grammar with example Describe the transition function of PDA Define the term ambiguity and inherent ambiguity in parse tree Differences between CFG and unrestricted grammar with example Using pumping lemma, show the CFG is not context free Configuration of PDA Use concept of closure property to prove that intersection of context free language is not context free Role of parse tree in context free grammar Additional feature PDA has when compared with FA Ambiguous grammar with example Decision properties of context free language Prove that context free languages are closed under union and concatenation operation Inherent ambiguity in grammar Operation of PDA","title":"Chapter 3:"},{"location":"Subjects/TOC/#chapter-4","text":"Construct a turing machine that transform Design a turing machin that computes Define turing machine and multitape turing machine How does turing machine works explain Describe the working of Turing machine with block diagram How can we represent configuration of Turing Machine State and explain rules for combining turing machine Compare turing machine with FA and PDA Define head shifting and symbol writing Turing machines Define the term configuration of turing machine Compare multitape turing machine with single tape turing machine What is unrestricted grammar? How unrestricted grammar can be defined as super set of CFG and Regular Grammar Is there any difference between unrestricted grammar and CFG explain Construct a grammar that accepts the language Explain turing recognition and turing decidable language Multitape turing machine design","title":"Chapter 4:"},{"location":"Subjects/TOC/#chapter-5","text":"Explain undecidable problems Explain Halting Problem with examples. Prove its unsolvable What do you mean by Church Turing Thesis? Why is it called a thesis? \\ What is algorithm according to church turing thesis Define the term Turing Decidable Define recursive and recursively enumerable language Proof of properties of recursive language What is the significance of the Universal Turing Machine? Explain working mechanism Explain encoding technique of universal turing machine","title":"Chapter 5:"},{"location":"Subjects/TOC/#chapter-6","text":"Define polynomial time reduction and computational complexity Explain about class P and NP problems with examples Describe traveling salesman problem Computational complexity of an algorithm Complexity theory Why is it important to deal with computational problems NP hard and NP complete problems with reference to polynomial time reduction Two factors affecting computational complexity of a problem How do class P and class NP relate to NP complete problems","title":"Chapter 6:"}]}